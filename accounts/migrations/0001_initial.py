# Generated by Django 4.2.3 on 2023-08-05 16:50

import ckeditor.fields
from decimal import Decimal
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='PassPhrase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('passphrase', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'verbose_name': 'Passphrase',
                'verbose_name_plural': 'Passphrase',
            },
        ),
        migrations.CreateModel(
            name='PrivacyPolicy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128)),
                ('title_fi', models.CharField(max_length=128, null=True)),
                ('title_en', models.CharField(max_length=128, null=True)),
                ('title_sv', models.CharField(max_length=128, null=True)),
                ('title_es', models.CharField(max_length=128, null=True)),
                ('title_ca', models.CharField(max_length=128, null=True)),
                ('title_de', models.CharField(max_length=128, null=True)),
                ('title_fr', models.CharField(max_length=128, null=True)),
                ('title_it', models.CharField(max_length=128, null=True)),
                ('title_zh_cn', models.CharField(max_length=128, null=True)),
                ('content', ckeditor.fields.RichTextField()),
                ('content_fi', ckeditor.fields.RichTextField(null=True)),
                ('content_en', ckeditor.fields.RichTextField(null=True)),
                ('content_sv', ckeditor.fields.RichTextField(null=True)),
                ('content_es', ckeditor.fields.RichTextField(null=True)),
                ('content_ca', ckeditor.fields.RichTextField(null=True)),
                ('content_de', ckeditor.fields.RichTextField(null=True)),
                ('content_fr', ckeditor.fields.RichTextField(null=True)),
                ('content_it', ckeditor.fields.RichTextField(null=True)),
                ('content_zh_cn', ckeditor.fields.RichTextField(null=True)),
            ],
            options={
                'verbose_name': 'Privacy policy',
                'verbose_name_plural': 'Privacy policies',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='TermsOfService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128)),
                ('title_fi', models.CharField(max_length=128, null=True)),
                ('title_en', models.CharField(max_length=128, null=True)),
                ('title_sv', models.CharField(max_length=128, null=True)),
                ('title_es', models.CharField(max_length=128, null=True)),
                ('title_ca', models.CharField(max_length=128, null=True)),
                ('title_de', models.CharField(max_length=128, null=True)),
                ('title_fr', models.CharField(max_length=128, null=True)),
                ('title_it', models.CharField(max_length=128, null=True)),
                ('title_zh_cn', models.CharField(max_length=128, null=True)),
                ('content', ckeditor.fields.RichTextField()),
                ('content_fi', ckeditor.fields.RichTextField(null=True)),
                ('content_en', ckeditor.fields.RichTextField(null=True)),
                ('content_sv', ckeditor.fields.RichTextField(null=True)),
                ('content_es', ckeditor.fields.RichTextField(null=True)),
                ('content_ca', ckeditor.fields.RichTextField(null=True)),
                ('content_de', ckeditor.fields.RichTextField(null=True)),
                ('content_fr', ckeditor.fields.RichTextField(null=True)),
                ('content_it', ckeditor.fields.RichTextField(null=True)),
                ('content_zh_cn', ckeditor.fields.RichTextField(null=True)),
            ],
            options={
                'verbose_name': 'Term of service',
                'verbose_name_plural': 'Terms of service',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('balance', models.DecimalField(decimal_places=2, default=Decimal('0.0'), max_digits=5)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('language', models.CharField(choices=[('fi', 'Finnish'), ('en', 'English'), ('sv', 'Swedish'), ('es', 'Spanish'), ('ca', 'Catalan'), ('de', 'German'), ('fr', 'French'), ('it', 'Italian'), ('zh-cn', 'Chinese')], default='en', max_length=5, verbose_name='Language')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
