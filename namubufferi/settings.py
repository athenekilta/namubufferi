"""
Django settings for namubufferi project.

Generated by 'django-admin startproject' using Django 3.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""
import os
from ast import literal_eval
from distutils.util import strtobool
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
try:
    with open(os.environ["DJANGO_SECRET_KEY_FILE"]) as f:
        SECRET_KEY = f.read().strip()
except KeyError:
    SECRET_KEY = os.environ["DJANGO_SECRET_KEY"]
# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = strtobool(os.environ["DJANGO_DEBUG"])

ALLOWED_HOSTS = os.environ["DJANGO_ALLOWED_HOSTS"].split()

# Application definition

INSTALLED_APPS = [
    "whitenoise.runserver_nostatic",
    "reactapp",
    "landing.apps.LandingConfig",
    "terms.apps.TermsConfig",
    "singlepageapp.apps.SinglepageappConfig",
    "onetimepass.apps.OnetimepassConfig",
    "api.apps.ApiConfig",
    "ledger.apps.LedgerConfig",
    "users.apps.UsersConfig",
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "rangefilter"
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "whitenoise.middleware.WhiteNoiseMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "namubufferi.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        # https://docs.djangoproject.com/en/3.2/howto/overriding-templates/
        "DIRS": [BASE_DIR / "templates"],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "namubufferi.wsgi.application"


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases


DATABASES = {
    "default": {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}

# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = "en"

TIME_ZONE = "Europe/Helsinki"

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/
# https://whitenoise.evans.io/en/stable/django.html

STATIC_URL = "/static/"
STATIC_ROOT = BASE_DIR / "staticfiles"

STATICFILES_DIRS = [
    BASE_DIR / "static",
]

STATICFILES_STORAGE = "whitenoise.storage.CompressedManifestStaticFilesStorage"
WHITENOISE_INDEX_FILE = True
# Serve reactapp at the root
# http://whitenoise.evans.io/en/stable/django.html#WHITENOISE_ROOT
# WHITENOISE_ROOT = STATIC_ROOT / "reactapp"

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

AUTHENTICATION_BACKENDS = [
    "django.contrib.auth.backends.ModelBackend",
    "onetimepass.backends.OneTimePassBackend",
]

LOGIN_URL = "landing:index"
LOGIN_REDIRECT_URL = "singlepageapp:index"
LOGOUT_REDIRECT_URL = "landing:index"
AUTH_USER_MODEL = "users.User"

ONETIMEPASS_ALLOWED_DOMAINS = os.environ["DJANGO_ONETIMEPASS_ALLOWED_DOMAINS"].split()

CSRF_TRUSTED_ORIGINS = os.environ["DJANGO_CSRF_TRUSTED_ORIGINS"].split()

EMAIL_HOST = os.environ["DJANGO_EMAIL_HOST"]
if not EMAIL_HOST:
    EMAIL_BACKEND = "django.core.mail.backends.console.EmailBackend"
EMAIL_HOST_PASSWORD = os.environ["DJANGO_EMAIL_HOST_PASSWORD"]
EMAIL_HOST_USER = os.environ["DJANGO_EMAIL_HOST_USER"]
EMAIL_PORT = os.environ["DJANGO_EMAIL_PORT"]
EMAIL_USE_TLS = strtobool(os.environ["DJANGO_EMAIL_USE_TLS"])
EMAIL_USE_SSL = strtobool(os.environ["DJANGO_EMAIL_USE_SSL"])
DEFAULT_FROM_EMAIL = os.environ["DJANGO_DEFAULT_FROM_EMAIL"]
SERVER_EMAIL = DEFAULT_FROM_EMAIL
EMAIL_SUBJECT_PREFIX = "[Namubufferi] "
ADMINS = literal_eval(os.environ["DJANGO_ADMINS"])

SECURE_SSL_REDIRECT = bool(strtobool(os.environ["DJANGO_SECURE_SSL_REDIRECT"]))
SECURE_HSTS_SECONDS = int(os.environ["DJANGO_SECURE_HSTS_SECONDS"])
SESSION_COOKIE_SECURE = strtobool(os.environ["DJANGO_SESSION_COOKIE_SECURE"])
CSRF_COOKIE_SECURE = strtobool(os.environ["DJANGO_CSRF_COOKIE_SECURE"])
SECURE_PROXY_SSL_HEADER = literal_eval(os.environ["DJANGO_SECURE_PROXY_SSL_HEADER"])

JSONAPI_EXPOSED_FIELDS = {
    "users": ("username",),
}

HIDDEN_ROOT = os.environ["DJANGO_HIDDEN_ROOT"]
BASE_URL = os.environ.get("BASE_URL")
SITE_NAME = os.environ.get("BASE_DOMAIN")

SIGNUP_SECRET = os.environ.get("SIGNUP_SECRET")