"""
Django settings for namubufferi project.

Generated by 'django-admin startproject' using Django 3.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""
import os
from ast import literal_eval
from distutils.util import strtobool
from pathlib import Path
from decimal import Decimal
from django.utils.translation import gettext_lazy as _

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv('DJANGO_SECRET_KEY', 'django-insecure-h1xvf8=q((v@xcjo)(d^s6_$92nqulnf0$-ged9eg6kz&vq3j9')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = strtobool(os.getenv("DJANGO_DEBUG", "True"))

ALLOWED_HOSTS = os.getenv("DJANGO_ALLOWED_HOSTS", "").split()


# Application definition

INSTALLED_APPS = [
    # Third party
    "taggit",
    "tailwind",
    'modeltranslation',
    'pwa',
    'ckeditor',

    # Django defaults
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    
    # Local
    "ledger",
    "accounts",
    "theme",
]

if DEBUG:
    INSTALLED_APPS += [
        "django_browser_reload",
    ]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    'django.middleware.locale.LocaleMiddleware',
    "django.middleware.common.CommonMiddleware",
    "accounts.middleware.AuthenticationMiddleware",
    "accounts.middleware.UserLanguageMiddleware",
]

if DEBUG:
    MIDDLEWARE += [
        "django_browser_reload.middleware.BrowserReloadMiddleware",
    ]

ROOT_URLCONF = "config.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        # https://docs.djangoproject.com/en/3.2/howto/overriding-templates/
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "config.wsgi.application"


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    "default": {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': 'db.sqlite3',
    }
}

# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "Europe/Helsinki"

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/
# https://whitenoise.evans.io/en/stable/django.html

STATIC_URL = "static/"

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

LOGIN_REDIRECT_URL = "ledger:buy"
LOGOUT_REDIRECT_URL = "accounts:login"


if DEBUG:
    EMAIL_BACKEND = "django.core.mail.backends.console.EmailBackend"
else:
    EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"

EMAIL_HOST = os.getenv('DJANGO_EMAIL_HOST', 'localhost')
EMAIL_PORT = int(os.getenv('DJANGO_EMAIL_PORT', '1025'))
EMAIL_HOST_USER = os.getenv('DJANGO_EMAIL_HOST_USER', '')
EMAIL_HOST_PASSWORD = os.getenv('DJANGO_EMAIL_HOST_PASSWORD', '')
EMAIL_USE_TLS = strtobool(os.getenv('DJANGO_EMAIL_USE_TLS', 'False'))
EMAIL_USE_SSL = strtobool(os.getenv('DJANGO_EMAIL_USE_SSL', 'False'))
DEFAULT_FROM_EMAIL = os.getenv('DJANGO_DEFAULT_FROM_EMAIL', 'dev@athene.fi')
SERVER_EMAIL = DEFAULT_FROM_EMAIL
EMAIL_SUBJECT_PREFIX = '[Namubufferi]'

ADMINS = literal_eval(os.getenv("DJANGO_ADMINS", '[]'))

SECURE_SSL_REDIRECT = bool(strtobool(os.getenv("DJANGO_SECURE_SSL_REDIRECT", "False")))
SECURE_HSTS_SECONDS = int(os.getenv("DJANGO_SECURE_HSTS_SECONDS", "0"))
SESSION_COOKIE_SECURE = strtobool(os.getenv("DJANGO_SESSION_COOKIE_SECURE", "False"))
CSRF_COOKIE_SECURE = strtobool(os.getenv("DJANGO_CSRF_COOKIE_SECURE", "False"))
SECURE_PROXY_SSL_HEADER = literal_eval(os.getenv("DJANGO_SECURE_PROXY_SSL_HEADER", "[]"))

AUTH_USER_MODEL = 'accounts.CustomUser'

TAGGIT_CASE_INSENSITIVE = True

MOBILEPAY_TOKEN = os.getenv("MOBILEPAY_TOKEN", "")
MOBILEPAY_FEE = Decimal(0.012)
MOBILEPAY_MIN_FEE = Decimal(0.06)
MOBILEPAY_PAYMENTPOINTID = os.getenv("MOBILEPAY_PAYMENTPOINTID", "")

TAILWIND_APP_NAME = 'theme'
INTERNAL_IPS = [
    "127.0.0.1",
]
NPM_BIN_PATH = os.getenv("NPM_BIN_PATH", "npm")

###   Language settings   ###
gettext = lambda s: s
LANGUAGES = [
    ('fi', gettext('Finnish')),
    ('en', gettext('English')),
    ('sv', gettext('Swedish')),
    ('es', gettext('Spanish')),
    ('ca', gettext('Catalan')),
    ('de', gettext('German')),
    ('fr', gettext('French')),
    ('it', gettext('Italian')),
    ('zh-cn', gettext('Chinese')),
]

LOCALE_PATHS = [
    os.path.join(BASE_DIR, 'locale'),
]

MODELTRANSLATION_DEFAULT_LANGUAGE = 'en'
MODELTRANSLATION_FALLBACK_LANGUAGES = (MODELTRANSLATION_DEFAULT_LANGUAGE,)

MODELTRANSLATION_TRANSLATION_FILES = (
    'ledger.translation',
)

###   PWA settings   ###
PWA_APP_NAME = 'NamuBufferi'
PWA_APP_DESCRIPTION = "NamuBufferi - Athene's snack bar"
PWA_APP_THEME_COLOR = '#ffffff'
PWA_APP_BACKGROUND_COLOR = '#355e3b'
PWA_APP_DISPLAY = 'standalone'
PWA_APP_ORIENTATION = 'portrait'
PWA_APP_DEBUG_MODE = True
PWA_APP_ICONS = [
    {
        'src': '/static/images/logo_160x160.png',
        'sizes': '160x160'
    }
] 
PWA_APP_ICONS_APPLE = [
    {
        'src': '/static/images/logo_160x160.png',
        'sizes': '160x160'
    }
]